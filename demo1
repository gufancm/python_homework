【问题描述】
具有下面性质的数a称为&ldquo;同构数&rdquo;：
设b是a的平方，a与b的低若干位相同。
例如，5是25的同构数,25是625的同构数
编程序满足如下要求:
输入两个整数a,b (0<=a, b<=99),找出a、b之间全部的同构数。
【输入形式】
从键盘输入0-99之间的两个整数a和b，以空格隔开。
【输出形式】
在屏幕上按照由小到大的顺序输出所有同构数，每一个整数占一行。
【输入样例】
0 30
【输出样例】
0
1
5
6
25
【样例说明】
在0-30之间的同构数有0, 1, 5, 6, 25.













def is_homomorphic(a):
    """
    检查数字a是否为同构数，即a的平方的低若干位与a相同。
    """
    b = a * a
    # 转为字符串以便比较低位
    str_a = str(a)
    str_b = str(b)
    # 比较a和b的低若干位
    if str_b.endswith(str_a):
        return True
    return False


def main():
    # 读取输入，获取a和b
    a, b = map(int, input().split())

    # 存储所有同构数
    homomorphic_numbers = []

    # 遍历区间[a, b]，判断每个数是否为同构数
    for i in range(a, b + 1):
        if is_homomorphic(i):
            homomorphic_numbers.append(i)

    # 按从小到大的顺序输出所有同构数
    for num in homomorphic_numbers:
        print(num)


if __name__ == "__main__":
    main()
